// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// computeGenerationalDistanceC
double computeGenerationalDistanceC(NumericMatrix points, NumericMatrix refPoints, double p);
RcppExport SEXP _ecr_computeGenerationalDistanceC(SEXP pointsSEXP, SEXP refPointsSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type points(pointsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type refPoints(refPointsSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(computeGenerationalDistanceC(points, refPoints, p));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP computeCrowdingDistanceC(void *);
RcppExport SEXP computeHVC(void *, void *);
RcppExport SEXP computeHVContributionC(void *, void *);
RcppExport SEXP computeRIndicatorC(void *, void *, void *, void *, void *);
RcppExport SEXP dominatedC(void *);
RcppExport SEXP doNondominatedSortingC(void *);
RcppExport SEXP emoaIndEpsC(void *, void *);
RcppExport SEXP polynomialMutationC(void *, void *, void *, void *, void *);
RcppExport SEXP simulatedBinaryCrossoverC(void *, void *, void *, void *, void *);

static const R_CallMethodDef CallEntries[] = {
    {"_ecr_computeGenerationalDistanceC", (DL_FUNC) &_ecr_computeGenerationalDistanceC, 3},
    {"computeCrowdingDistanceC",          (DL_FUNC) &computeCrowdingDistanceC,          1},
    {"computeHVC",                        (DL_FUNC) &computeHVC,                        2},
    {"computeHVContributionC",            (DL_FUNC) &computeHVContributionC,            2},
    {"computeRIndicatorC",                (DL_FUNC) &computeRIndicatorC,                5},
    {"dominatedC",                        (DL_FUNC) &dominatedC,                        1},
    {"doNondominatedSortingC",            (DL_FUNC) &doNondominatedSortingC,            1},
    {"emoaIndEpsC",                       (DL_FUNC) &emoaIndEpsC,                       2},
    {"polynomialMutationC",               (DL_FUNC) &polynomialMutationC,               5},
    {"simulatedBinaryCrossoverC",         (DL_FUNC) &simulatedBinaryCrossoverC,         5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ecr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
